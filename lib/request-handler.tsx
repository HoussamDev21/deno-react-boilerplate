import React from 'react'
import { renderToReadableStream } from "react-dom/server"
import Root from "@/app/Root.tsx"
import pagesResolver from "@/lib/pages-resolver.ts"

const routes = pagesResolver()

export default async function requestHandler(req: Request): Promise<Response> {
  const { pathname } = new URL(req.url)
  if (req.method === 'GET' && pathname.startsWith('/public')) {
    const file = await Deno.readFile('.' + pathname)
    return new Response(new Blob([file.buffer]))
  }

  const route = routes.find(r => r.routePath === pathname)
  if (route) {
    const { default: PageComponent } = await import('../' + route.filePath)
    // inject js bundle in client side previously generated by build(...) function
    const scriptContent = await Deno.readTextFile('./app/build/index.js')
    const stream = await renderToReadableStream(<Root><PageComponent /></Root>, {
      bootstrapScriptContent: scriptContent,
    })
    const response = new Response(stream, {
      headers: { "content-type": "text/html" },
    })
    return response
  }

  return new Response('not found', {
    status: 404
  })
}